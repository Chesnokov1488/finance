import sqlite3
import telebot
from telebot import types

bot = telebot.TeleBot('6055269871:AAF08pDzj_aaVLJGY_q156XhQnpwyZQnZCg')

START_TEXT = """–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-—Ñ–∏–Ω–∞–Ω—Å–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ª–∏—á–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –≤ —Ç–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–∞—Ö ü§ë
–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É /help"""

HELP_TEXT = """–Ø –ø–æ–∫–∞ —á—Ç–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –Ω–µ —Å–∫–æ—Ä–æ. –ü–æ—ç—Ç–æ–º—É —Å–µ–π—á–∞—Å –ª—É—á—à–µ –≤—Å–µ–≥–æ –µ—Å–ª–∏ –≤—ã –ø—Ä–æ—á—Ç—ë—Ç–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—éüòÖ
‚úÖ–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã –¥–æ—Ö–æ–¥: /–¥–æ—Ö–æ–¥ 1000 –ó–∞—Ä–ø–ª–∞—Ç–∞ 
‚úÖ–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã —Ä–∞—Å—Ö–æ–¥: /—Ä–∞—Å—Ö–æ–¥ 500 –µ–¥–∞
‚úÖ–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–≤–æ–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –±–∞–ª–∞–Ω—Å
ü¶æ–î–ª—è –∂–∞–ª–æ–±, —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞, –∏ —Ç–¥ –Ω–∞–ø–∏—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞: @alekseychesnokov
"""

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,HELP_TEXT)

@bot.message_handler(commands=['start'])
def start(message):
    conn = sqlite3.connect('finance.db', check_same_thread=False)
    cursor = conn.cursor()


    cursor.execute('''
        CREATE TABLE IF NOT EXISTS income (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            amount REAL,
            description TEXT
        )
    ''')
    conn.commit()
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('/help')
    btn2 = types.KeyboardButton('/–±–∞–ª–∞–Ω—Å')
    markup.row(btn1,btn2)

    bot.send_message(message.chat.id, START_TEXT,reply_markup=markup)

@bot.message_handler(commands=['–¥–æ—Ö–æ–¥'])
def add_income(message):
    try:
        amount = float(message.text.split()[1])
    except (ValueError, IndexError):
        bot.reply_to(message, "–¢–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —É –Ω–∞—Å –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è. –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ /help")
        return
    
    description = ' '.join(message.text.split()[2:])
    
    thread_conn = sqlite3.connect('finance.db', check_same_thread=False)
    thread_cursor = thread_conn.cursor()
    
    thread_cursor.execute('INSERT INTO income (amount, description) VALUES (?, ?)', (amount, description))
    thread_conn.commit()
    
    # Close the thread-specific connection and cursor
    thread_cursor.close()
    thread_conn.close()
    
    bot.reply_to(message, f"–î–æ—Ö–æ–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ {amount:.2f} —Ä—É–±–ª–µ–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")

@bot.message_handler(commands=['—Ä–∞—Å—Ö–æ–¥'])
def add_expense(message):
    try:
        amount = float(message.text.split()[1])
    except (ValueError, IndexError):
        bot.reply_to(message, "–¢–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —É –Ω–∞—Å –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è. –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ /help")
        return
    
    description = ' '.join(message.text.split()[2:])
    
    # Create a new connection and cursor for the current thread
    thread_conn = sqlite3.connect('finance.db', check_same_thread=False)
    thread_cursor = thread_conn.cursor()
    
    # Create the expenditure table if it doesn't exist
    thread_cursor.execute('''
        CREATE TABLE IF NOT EXISTS expenditure (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            amount REAL,
            description TEXT
        )
    ''')
    
    # Add expense to the database using the thread-specific cursor
    thread_cursor.execute('INSERT INTO expenditure (amount, description) VALUES (?, ?)', (amount, description))
    thread_conn.commit()
    
    # Close the thread-specific connection and cursor
    thread_cursor.close()
    thread_conn.close()
    
    bot.reply_to(message, f"–†–∞—Å—Ö–æ–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ {amount:.2f} —Ä—É–±–ª–µ–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")

@bot.message_handler(commands=['–±–∞–ª–∞–Ω—Å'])
def calculate_balance(message):
    # Create a new connection and cursor for the current thread
    thread_conn = sqlite3.connect('finance.db', check_same_thread=False)
    thread_cursor = thread_conn.cursor()

    # Calculate balance by subtracting total expenditure from total income
    thread_cursor.execute('SELECT COALESCE(SUM(amount), 0) FROM income')
    total_income = thread_cursor.fetchone()[0]

    thread_cursor.execute('SELECT COALESCE(SUM(amount), 0) FROM expenditure')
    total_expenditure = thread_cursor.fetchone()[0]
    
    balance = total_income - total_expenditure

    # Close the thread-specific connection and cursor
    thread_cursor.close()
    thread_conn.close()

    bot.send_message(message.chat.id, f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {balance:.2f} —Ä—É–±–ª–µ–π")


bot.polling(none_stop=True)
